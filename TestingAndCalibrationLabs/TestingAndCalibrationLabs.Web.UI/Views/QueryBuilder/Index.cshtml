@model TestingAndCalibrationLabs.Web.UI.Models.QueryBuilderRecordDTO

<link rel="stylesheet" href="https://cdn.korzh.com/eq/7.2.0/eq.core.min.css">
@*<link rel="stylesheet" href="https://cdn.korzh.com/eq/7.2.0/eq.view.min.css">*@
<style>


    .eqjs-button-placeholder {
        display: inline;
    }

    .eqv-header-panel {
        height: 494px
    }

        .eqv-header-panel > div {
            height: 494px;
            margin: 0 0 20px
        }

    #eqv-content {
        background: #f6f6f6;
        border: 2px solid #dedede;
        padding: 20px
    }

    .eqv-hr {
        height: 6px;
        border: none;
        margin: 0
    }

    .eqv-bottom-panel {
        height: 313px
    }

        .eqv-bottom-panel > div {
            height: 287px;
            margin: 0 0 20px
        }

    .eqv-central-block {
        width: 59%;
        float: left
    }

    #eqv-footer {
        margin: 10px 0;
        padding: 0 0 20px;
        font: normal 12px Calibri;
        color: #000
    }





    .eqv-entities-block {
        width: 20%;
        float: left;
        margin: 0 20px 0 0 !important;
        background: #fff;
        border: 1px solid silver;
        position: relative
    }

    .eqv-entities-hr {
        background: #7bc4f8
    }

    .eqv-entities-title {
        font: normal 18pt Segoe UI Light,Segoe Light,Segoe UI,Arial,Helvetica,sans-serif;
        color: #4f4f4f;
        padding: 0 0 4px 10px;
        background: #f9f9f9;
        border-bottom: 1px solid #7bc4f8;
        height: 38px
    }

    .eqv-entities-panel-container, .eqv-query-panel-container {
        position: absolute;
        left: 0;
        right: 0;
        bottom: 0;
        top: 44px
    }

    .eqv-conditions-block {
        background: #fff;
        border: 1px solid silver;
        height: 294px;
        position: relative
    }

    .eqv-conditions-hr {
        background: #1777b1
    }

    .eqv-conditions-title {
        font: normal 18pt Segoe UI Light,Segoe Light,Segoe UI,Arial,Helvetica,sans-serif;
        color: #4f4f4f;
        padding: 0 0 4px 10px;
        background: #f9f9f9;
        border-bottom: 1px solid #1777b1;
        height: 38px
    }

    .eqv-columns-block, .eqv-columns-sorting-block {
        background: #fff;
        border: 1px solid silver;
        height: 180px;
        margin: 0 0 20px;
        position: relative
    }

    .eqv-columns-sorting-block {
        height: auto;
        margin-top: -21px
    }

    .eqv-columns-hr {
        background: #1777b1
    }

    .eqv-columns-title {
        font: normal 18pt Segoe UI Light,Segoe Light,Segoe UI,Arial,Helvetica,sans-serif;
        color: #4f4f4f;
        padding: 0 0 4px 10px;
        background: #f9f9f9;
        border-bottom: 1px solid #1777b1;
        height: 38px
    }

    .eqv-columns-panel-container {
        position: absolute;
        left: 0;
        right: 0;
        bottom: 0;
        top: 44px
    }

    .eqv-columns-sorting-title {
        z-index: 1000;
        position: absolute;
        top: -12px;
        left: 20px;
        background-color: #fff;
        padding: 0 10px 2px;
        border: 1px solid #d3d3d3;
        border-radius: 7px;
        font: normal 10pt Segoe UI Light,Segoe Light,Segoe UI,Arial,Helvetica,sans-serif
    }

    .eqv-columns-sorting-container {
        margin-top: 10px
    }

    .eqv-menu-block {
        width: 17%;
        float: right;
        background: #fff;
        border: 1px solid silver
    }

    .eqv-menu-hr {
        background: #ae67df
    }

    .eqv-menu-title {
        font: normal 18pt Segoe UI Light,Segoe Light,Segoe UI,Arial,Helvetica,sans-serif;
        color: #4f4f4f;
        padding: 0 0 4px 10px;
        background: #f9f9f9;
        border-bottom: 1px solid #1777b1
    }

    .eqv-menu-content {
        padding: 10px
    }

        .eqv-button, .eqv-menu-content div {
            margin: 10px 0
        }

    .eqv-button {
        width: 100%;
        border: 1px solid #ae67df;
        font-family: Segoe UI;
        font-size: 15px;
        color: #4f4f4f;
        cursor: pointer;
        padding: 3px 10px;
        display: inline-block;
        text-align: center
    }

        .eqv-button:hover {
            background-color: #ae67df;
            color: #fff !important
        }

    .eqv-button-execute {
        border-color: #237901;
        margin-top: 40px
    }

        .eqv-button-execute:hover {
            background-color: #237901
        }

    .eqv-sql-panel {
        width: 25%;
        border: 1px solid #c4d6e5;
        background: #fff;
        float: left;
        position: relative
    }

    .eqv-sql-panel-hr {
        background: #a8abad
    }

    .eqv-sql-panel-title {
        font: normal 18pt Segoe UI Light,Segoe Light,Segoe UI,Arial,Helvetica,sans-serif;
        color: #4f4f4f;
        padding: 0 0 4px 10px;
        background: #f9f9f9;
        border-bottom: 1px solid #a8abad;
        height: 38px
    }

    .eqv-sql-block {
        bottom: 0;
        left: 0;
        overflow: auto;
        position: absolute;
        right: 0;
        top: 44px
    }

    .eqv-sql-panel-result {
        padding: 7px;
        overflow-y: auto;
        overflow-x: hidden;
        font: normal 11px Verdana
    }

    #eqv-ResultExportButtons {
        display: none;
        float: right;
        margin-right: 5px;
        margin-top: 3px;
        font-size: 12pt;
        padding: 4px
    }

    .eqv-result-panel {
        background: #fff;
        position: relative;
        border: 1px solid #c1d5e4;
        width: 100%;
        float: right
    }

    .eqv-result-panel-hr {
        background: #237901
    }

    .eqv-result-panel-title {
        border-bottom: 1px solid #237901;
        font: normal 18pt Segoe UI Light,Segoe Light,Segoe UI,Arial,Helvetica,sans-serif;
        color: #4f4f4f;
        padding: 0 0 4px 10px;
        background: #f8f7f7;
        height: 38px
    }

        .eqv-result-panel-title a {
            font-family: Trebuchet MS,Tahoma,Verdana,Geneva,Arial,Helvetica,sans-serif;
            font-weight: 700;
            font-size: 13px;
            color: #333;
            text-decoration: none;
            border-bottom: 1px dashed;
            margin-right: 10px
        }

            .eqv-result-panel-title a:hover {
                color: #333;
                border-bottom: 1px solid;
                text-decoration: none
            }

    .eqv-result-panel-content {
        bottom: 0;
        left: 0;
        overflow: hidden;
        position: absolute;
        right: 0;
        top: 44px;
        display: flex
    }

        .eqv-result-panel-content table {
            font: normal 12px Calibri;
            border: 1px solid rgba(0,0,0,.125)
        }

            .eqv-result-panel-content table td {
                padding: 5px;
                color: #4f4f4f;
                font: 10px Arial;
                border-bottom: 1px solid #e4e4e4
            }

    .eqv-result-panel-error {
        color: red;
        font: normal 20px Calibri;
        text-align: center
    }



    .eqv-result-grid {
        display: flex;
        flex-direction: column;
        overflow: auto;
        flex: 100 1 auto
    }

    .eqv-result-grid-header td {
        font: 700 14px Calibri;
        border-bottom: 1px solid silver !important
    }

    .eqv-result-grid-header th {
        background-color: #f6f6f6;
        color: #4f4f4f;
        height: 30px;
        font: 700 11px Arial !important;
        border-bottom: 1px solid #e4e4e4;
        text-align: left;
        padding-left: 4px;
        padding-right: 4px
    }

    .eqv-grid-panel {
        overflow: auto;
        flex-grow: 100
    }

        .eqv-grid-panel.eqjs-mobile {
            overflow: hidden
        }

    .eqv-chart-panel {
        flex: 0 0 360px
    }


    .eqv-export-buttons {
        float: right;
        margin-right: 5px;
        margin-top: 3px;
        font-size: 12pt;
        padding: 4px
    }

    .eqv-select {
        font-size: 12px;
        width: 100%
    }

    .eqv-drop-button {
        margin-top: 0 !important;
        margin-bottom: 0 !important
    }

    .eqv-dropdown-container {
        width: 100%;
        position: relative;
        display: inline-block
    }

    .eqv-dropdown-content {
        display: none;
        position: absolute;
        min-width: 160px;
        z-index: 1;
        border: 1px solid silver;
        border-radius: 0 0 4px 4px;
        padding: 6px 0;
        box-shadow: 4px 8px 15px 0 rgba(0,0,0,.16);
        margin-top: 0 !important;
        background-color: #fff;
        right: 0
    }

        .eqv-dropdown-content a {
            font-size: .9rem;
            color: #333;
            padding: 5px 14px;
            text-decoration: none;
            display: block;
            white-space: nowrap
        }

            .eqv-dropdown-content a:hover {
                background-color: #ecf3f5;
                color: #1776b1
            }

    .eqv-dropdown-show {
        display: block
    }

    .eqjs-query-name .eqjs-query-name-tooltip {
        visibility: hidden;
        background-color: #fff;
        padding: 5px;
        position: absolute;
        z-index: 1;
        top: 0;
        right: 0;
        left: 0
    }

    .eqjs-query-name:hover .eqjs-query-name-tooltip {
        visibility: visible
    }

    .eqjs-query-name-theme {
        color: #7a10c3;
        border-bottom: 1px solid silver
    }

</style>

<h1>Query Builder</h1>

<div class="container">

    <div id="eqv-content">
        <div class="eqv-header-panel">
            <div class="eqv-entities-block">
                <hr class="eqv-entities-hr eqv-hr">
                <div class="eqv-entities-title">Entities</div>
                <div class="eqv-entities-panel-container">
                    <div id="EntitiesPanel" onselectstart="return false" class="eqjs-ep-panel eqjs-mobile">
                        <div class="eqjs-ep-entity eqjs-mobile" style="top:0px" id="LeftPanel">

                            @*yaha tak ka cllss*@

                            <div class="eqjs-ep-entity-children eqjs-mobile">
                                @foreach (var item in Model.FieldValues)
                                {

                                    @*this is for title part*@
                                    <div class="eqjs-ep-entity-node eqjs-mobile">
                                        <div class="eqjs-ep-entity-node-button" onclick="DropdownContent('@item.Key.tableName')"></div>
                                        <label class="eqjs-ep-entity-node-label">
                                            <input type="checkbox" name="@item.Key.tableName" value="@item.Key.tableName" class="Parent-item" id="@item.Key.tableName" onclick="FunctionBox('@item.Key.tableName','@item.Value.Count')"> @Html.DisplayFor(tables => item.Key.tableName)
                                        </label>
                                    </div>
                                    <div class="eqjs-ep-entity-children eqjs-mobile" id="flush-@item.Key.tableName" style="display:none">
                                        @for (var pos = 0; pos < item.Value.Count; pos++)
                                        {

                                            <div class="eqjs-ep-entity-attr">
                                                <label class="eqjs-ep-entity-attr-label">
                                                    <div class="eqjs-ep-entity-offset" style="width:30px;"></div>
                                                    <input type="checkbox" class="child-item" name="@item.Key.tableName" id="@item.Key.tableName@pos" value="@item.Value[pos].coloumnName" />@Html.DisplayFor(colNames =>@item.Value[pos].coloumnName)
                                                </label>
                                            </div>

                                        }
                                    </div>
                                }
                            </div>

                        </div>
                        <div class="eqjs-ep-tool-panel eqjs-mobile">
                            <div class="eqjs-ep-tool-panel-left-side">
                                <div class="eqjs-ep-tool-panel-deselect-all" title="Clear selection"></div>
                            </div>
                            <div class="eqjs-ep-tool-panel-right-side">
                                <div class="eqjs-ep-tool-panel-add-columns" title="Add column(s)" onclick="CheckboxContent()"></div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <div class="eqv-central-block">

                <div class="eqv-columns-block">
                    <hr class="eqv-columns-hr eqv-hr" />
                    <div class="eqv-columns-title">Columns</div>
                    <div class="eqv-columns-panel-container">

                        <div id="ColumnsPanel" class="eqjs-qc-panel">
                            <div class="eqjs-qc-header" style="display:block">
                                <div class="eqjs-qc-header-expression">Expression</div>
                                <div class="eqjs-qc-header-title">Title</div>
                            </div>
                            <div class="eqjs-qc-columns" id="ColumnData">
                            </div>

                            <div class="eqjs-addrow eqjs-qc-addrow eqjs-addrow-empty eqjs-mobile">
                                <a href="javascript:void(0)">[Add new column]</a>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="eqv-conditions-block">
                    <hr class="eqv-conditions-hr eqv-hr">
                    <div class="eqv-conditions-title">Conditions</div>
                    <div class="eqv-query-panel-container">
                        <div id="queryPanel" class="eqjs-qp-panel eqjs-mobile">
                            <div  data-group>
                                <div class="eqjs-qp-row eqjs-qp-row-group eqjs-qp-row-group-root" data-group-row="">
                                    <span class="eqjs-qp-grelement">Select records where </span>
                                    <a href="javascript:void(0)" onclick="ConditionAll(this)" title="all" class="eqjs-qp-grelement" id="conditionValue">all</a>
                                    <span class="eqjs-qp-grelement"> of the following apply</span>
                                    <div class="eqjs-qp-condition-buttonsBlock">
                                        <div class="eqjs-qp-button-placeholder" data-btnplaceholder="">
                                            <div class="eqjs-qp-condition-button eqjs-qp-condition-button-addCondition" tabindex="0" data-button="" title="Add condition"></div>
                                        </div>
                                        <div class="eqjs-qp-button-placeholder" data-btnplaceholder="">
                                            <div class="eqjs-qp-condition-button eqjs-qp-condition-button-addPredicate" tabindex="0" data-button="" title="Add group of conditions"></div>
                                        </div>
                                    </div>
                                    <div class="eqjs-qp-conditions null eqjs-qp-conditions-root" data-conditions=""></div>
                                </div>
                                <div class="eqjs-qp-conditions null eqjs-qp-conditions-root" id ="condition-data">

                                </div>
                            </div>
                            <div class="eqjs-addrow eqjs-qp-addrow eqjs-mobile">
                                <a href="javascript:void(0)" onclick="NewConditionMenu(this)" title="[Add new condition]">[Add new condition]</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="eqv-menu-block">
                <hr class="eqv-menu-hr eqv-hr">
                <div class="eqv-menu-title">Query Menu</div>
                <div class="eqv-menu-content">
                    @*New Query button*@
                    <div id="QueryNameLabel" class="eqjs-query-name eqjs-mobile">
                        <div class="eqjs-query-name-text eqjs-query-name-theme">[New query]</div>
                        <span class="eqjs-query-name-asterisk" style="visibility: visible;">*</span>
                        <span class="eqjs-query-name-tooltip eqjs-query-name-theme">[New query]</span>
                    </div>
                    <a id="ClearQueryButton" class="eqv-button">Clear</a>
                    <div class="eqv-dropdown-container">
                        <a id="LoadQueryButton" class="eqv-button eqv-drop-button">Load <span style="float: right">▼</span></a>
                        <div class="eqv-dropdown-content">
                        </div>
                    </div>
                    <div id="ChangeLocale">
                        <select class="eqv-select">
                            <option value="en-US">English - English</option>
                            <option value="ru">Russian - русский</option>
                            <option value="es">Spanish - español</option>
                        </select>
                    </div>

                </div>
            </div>
        </div>

        <div class="eqv-bottom-panel">
            <div class="eqv-result-panel">
                <hr class="eqv-result-panel-hr eqv-hr">
                <div class="eqv-result-panel-title">
                    Result
                    <span id="ResultCount" style="display:none; margin-left:20px; font-size:small"></span>
                    <span class="eqv-export-buttons">
                        <a class="eqjs-export eqjs-disabled" href="javascript:void(0)" data-format="excel">Export to Excel</a>
                        <a class="eqjs-export eqjs-disabled" href="javascript:void(0)" data-format="pdf">Export to PDF</a>
                        <a class="eqjs-export eqjs-disabled" href="javascript:void(0)" data-format="excel-html">Export to HTML (Excel-compatible)</a>
                        <a class="eqjs-export eqjs-disabled" href="javascript:void(0)" data-format="csv">Export to CSV</a>
                    </span>
                </div>
            </div>
        </div>

    </div>
</div>
<script>


    /// Entities content dropdown  hide or unhide function

    function DropdownContent(HiddenValue) {

        var HiddenValue = "flush-" + HiddenValue;
        var element = document.getElementById(HiddenValue);

        if (element.style.display == "none") {
            element.style = "display:block";

        }
        else
            element.style = "display:none";

    }


    /// This Function is to Check  the Dropdown Item of Entities

    function FunctionBox(TableName, CountValue) {

        var value = document.getElementById(TableName);



        for (var item = 0; item < CountValue; item++) {
            var element = TableName + item;



            if (value.checked == true) {
                document.getElementById(element).checked = true;
            }
            else {
                document.getElementById(element).checked = false;

            }


        }
    }



    /// This funtion will hiden and Unhide the icon of entities dropdown
    $(".eqjs-ep-entity-node-button").click(function () {


        $(this).toggleClass(" eqjs-ep-entity-node-button-open");
    });


    /// This will clear the Select Checkboxes and its item

    $(".eqjs-ep-tool-panel-deselect-all").click(function () {
        $(':checkbox').each(function () {
            this.checked = false;
        });

    })


    /// Checked will be selected  and will  put it in the express and title
    function CheckboxContent() {

        var checkboxes = document.querySelectorAll('input[type=checkbox]:checked');

        var Description = document.getElementById("ColumnData");


        for (var item of checkboxes) {

            var Element = document.getElementById(item.id);





            if (Element.className == "child-item") {



                var ElementAttribute = document.createElement('div');
                ElementAttribute.className = "eqjs-qc-row eqjs-qc-row-column-entattr";
                ElementAttribute.id = item.id + "column-menu";

                var sortingIcon = document.createElement('div');
                sortingIcon.className = "fa fa-sort-amount-asc";
                sortingIcon.style = "font-size:20px";
                sortingIcon.onclick = function () { Sorting(this) }
                sortingIcon.title = "sorting";
                sortingIcon.tabIndex = "0";
                ElementAttribute.appendChild(sortingIcon);

                var ExpressionColumn = document.createElement('div');
                ExpressionColumn.className = "eqjs-qc-expr-block";
                var ExpressionDiv = document.createElement('div');
                ExpressionDiv.className = "eqjs-qc-colelement eqjs-qc-attrelement";
                ExpressionDiv.innerHTML = "<a href='#'>" + Element.name + " " + Element.value + "</a>";
                ExpressionColumn.appendChild(ExpressionDiv);
                ElementAttribute.appendChild(ExpressionColumn);

                var TitleColumn = document.createElement('div');
                TitleColumn.className = "eqjs-qc-colelement eqjs-qc-captionelement";

                TitleColumn.innerHTML = "<a href='#' onclick='TitleEdit(this)' style title= " + Element.value + ">" + Element.value + "</a>" + '<input style="min-width: 0px; display: none;" value=' + Element.value + '></input> ';

                ElementAttribute.appendChild(TitleColumn);

                Description.appendChild(ElementAttribute);
                /// From here all icon data
                var sideIcon = document.createElement('div');
                sideIcon.className = "eqjs-column-buttonsBlock eqjs-qc-buttonsBlock";
                sideIcon.style.display = "block";

                var Aggregate = document.createElement('div');
                Aggregate.className = "eqjs-button-placeholder";
                Aggregate.id = ElementAttribute.id + "-agg";
                Aggregate.onclick = function () { Aggregates(this.id) }

                Aggregate.innerHTML = ' <i class="fa fa-facebook-f" style="font-size:10px;margin:2.5px" > </i>';
                sideIcon.appendChild(Aggregate);
                //Delete icon
                var Delete = document.createElement('div');
                Delete.className = "eqjs-button-placeholder";
                Delete.id = ElementAttribute.id;
                Delete.onclick = function () { DeleteExpression(this.id) }
                Delete.innerHTML = '<i class="fa fa-close"></i>'
                sideIcon.appendChild(Delete);
                ElementAttribute.appendChild(sideIcon);



            }


        }
        $(':checkbox').each(function () {
            this.checked = false;
        });
    }


    /// This will delete the single Expression
    function DeleteExpression(ID) {

        document.getElementById(ID).remove();
        var Expression = document.getElementsByClassName("eqjs-menu-rootLevel eqjs-menu-levelDiv")[0]
        Expression.style.display = "none";

    }

    var temporaryDetail = null;
    var sortingIconCaller = null;

    // sorting function
    function Sorting(sortIconDetails) {
        var stylevalue = sortIconDetails.getBoundingClientRect();

        var sortDropdown = document.getElementById('ColumnsPanel-SortMenu');
        sortDropdown.style.display = "block";
        sortDropdown.style.top = stylevalue.bottom + "px";
        sortDropdown.style.left = stylevalue.left + "px";
        sortingIconCaller = sortIconDetails;
    }

    /// Dropdown item For Aggregate function

    function Aggregates(Aggregitem) {

        var styleData = document.getElementById(Aggregitem);
        var data = $(styleData.parentElement.parentElement).find('.eqjs-qc-expr-block')[0];
        if (data.nextSibling.children.length > 2) {
            while (data.children.length != 1) {
                $(data.children[0]).remove();
            }
            $(data).children().show();
            while (data.nextSibling.children.length != 2) {
                $(data.nextSibling.children[0]).remove();
            }

            $(data.nextSibling.children[0]).show();

        }
        else if (data.children.length > 1) {

            var TitleTag = $(data).find('.eqjs-qc-colelement.eqjs-qc-aggrfuncelement')[0].innerText;

            while (data.children.length != 1) {
                $(data.children[0]).remove();

            }

            Titledetail = (data.nextSibling.children[0]);

            Titledetail.innerText = (Titledetail.innerText).split(TitleTag).join("");
            Titledetail.title = Titledetail.innerText;
            TitleTag = (data.nextSibling.children[1]);
            TitleTag.value = Titledetail.innerText;

        }
        else {

            var aggreg = document.getElementsByClassName("eqjs-menu-rootLevel eqjs-menu-levelDiv")[0]
            aggreg.style.display = "none";


            var arr = ["COUNT", "CNTDST", "MIN", "MAX", "CustomSqlDivider", "CUSTOMSQL"];




            var rect = styleData.getBoundingClientRect();

            var aggreg = document.getElementsByClassName("eqjs-menu-rootLevel eqjs-menu-levelDiv")[0]
            aggreg.style.display = "block";
            //aggreg.id = Aggregitem + "-menu";
            aggreg.style.top = (rect.bottom + 5) + "px";
            aggreg.style.left = (rect.left + 2) + "px";



            ///for Dropdown item of aggregate function
            var parent = document.getElementsByClassName('eqjs-menu-scrollDiv')[0]

            for (var item = 0; item < parent.children.length; item++) {
                // alert(parent.children[item]);
                parent.children[item].id = Aggregitem + "-" + arr[item];
            }
            sortingIconCaller = Aggregitem;

        }

    }


    /// This is to hide all the Menu items
    window.onclick = function (event) {


        if (event.target.className != "fa fa-facebook-f") {
            var aggreg = document.getElementsByClassName("eqjs-menu-rootLevel eqjs-menu-levelDiv")[0]
            aggreg.style.display = "none";
        }
        if (event.target.className != "fa fa-sort-amount-asc") {
            var sortDropdown = document.getElementById('ColumnsPanel-SortMenu');
            sortDropdown.style.display = "none";
            // temporaryDetail = null;
        }
        if (event.target.localName != 'a') {
            var aggreg = document.getElementById("DataTypeMenu");
            aggreg.style.display = "none";
        }

        if (event.target.localName != 'a' && temporaryDetail != null && event.target.localName != 'input') {

            if (temporaryDetail.parentElement.children.length > 2) {


                var inputdata = temporaryDetail.nextSibling;
                temporaryDetail.title = inputdata.value;
                temporaryDetail.parentElement.previousElementSibling.children[0].children[0].innerHTML = inputdata.value;
                temporaryDetail.innerHTML = inputdata.value;
                inputdata.style.display = "none";
                temporaryDetail.style.display = "block";
                temporaryDetail = null;

            }
            else {
                var inputdata = temporaryDetail.nextSibling;
                temporaryDetail.title = inputdata.value;
                temporaryDetail.innerHTML = inputdata.value;
                inputdata.style.display = "none";
                temporaryDetail.style.display = "block";
                temporaryDetail = null;
            }

        }
        if (event.target.localName != 'a' && customTemporaryValue != null && event.target.localName != 'input') {

            var inputdata = customTemporaryValue.nextSibling;
            inputdata.style.display = "none";
            customTemporaryValue.style.display = "block";
            customTemporaryValue = null;

        }
    }


    ///This will edit the title on click
    function TitleEdit(titledetail) {

        temporaryDetail = titledetail;
        titledetail.style.display = "none";
        var inputdata = titledetail.nextSibling;
        inputdata.style.display = "block";
        titledetail.innerHTML = titledetail.title;


    }

    var customTemporaryValue = null;

    /// This will make change for CustomFunction

    function CustomFunction(titledetail) {
        customTemporaryValue = titledetail;
        titledetail.style.display = "none";
        var inputdata = titledetail.nextSibling;
        inputdata.style.display = "block";


    }

    /// This will change the arrangement of Expression item as per Selected Order

    function ExpressionPositioning(Position) {
        var cont = $(".eqjs-qc-columns");
        var arr = $.makeArray(cont.children());
        var temp = arr;

        switch (Position) {

            case 1:
                arr.sort(function (a, b) {


                    var textA = a.textContent;
                    var textB = b.textContent;


                    if (textA < textB) return -1;
                    if (textA > textB) return 1;

                    return 0;
                });
                cont.empty();

                $.each(arr, function () {
                    cont.append(this);
                });
                break;

            case 2:
                arr.sort(function (a, b) {


                    var textA = a.textContent;
                    var textB = b.textContent;


                    if (textA > textB) return -1;
                    if (textA < textB) return 1;

                    return 0;
                });
                cont.empty();

                $.each(arr, function () {
                    cont.append(this);
                });
                break;
            case 3:
                $(".eqjs-qc-columns").prepend(sortingIconCaller.parentElement);
                break;
            case 4:
                $(sortingIconCaller.parentElement).insertBefore($(sortingIconCaller.parentElement.previousSibling));
                break;
            case 5:

                $(sortingIconCaller.parentElement).next().after($(sortingIconCaller.parentElement));
                break;
            case 6:
                $(".eqjs-qc-columns").append(sortingIconCaller.parentElement);
                break;


            default:

        }
    }


    /// Dropdown List for the Custom function  string

    function customStringDropdown(ElementValue) {
        temporaryDetail = ElementValue;
        var stringPosition = ElementValue.getBoundingClientRect();
        var Aggregates = document.getElementById("DataTypeMenu");
        Aggregates.style.display = "block";
        Aggregates.style.top = (stringPosition.bottom + 5) + "px";
        Aggregates.style.left = (stringPosition.left + 2) + "px";
    }


    /// This  function is  to add all the items  of aggregate function  to the expression
    function AggregateFunctionAdd(Position) {

        var element = document.getElementById(sortingIconCaller).offsetParent.offsetParent.children[2];

        var count = document.createElement('div');

        count.className = "eqjs-qc-colelement eqjs-qc-aggrfuncelement";


        /// for of element creation
        var spanclass = document.createElement('span');
        spanclass.className = "eqjs-qc-colelement";
        spanclass.title = "of";
        spanclass.innerHTML = spanclass.title;


        switch (Position) {

            case 1:

                count.innerHTML = '<a href="#" onclick="Aggregates(this)">Count</a>';
                $(element).prepend($(spanclass));
                $(element).prepend($(count));
                element = element.nextSibling.firstChild;
                element.title += " Count";
                element.innerHTML += " Count";
                element.nextSibling.value += " Count";

                break;


            case 2:
                count.innerHTML = '<a href="#"onclick="Aggregates(this)">Distinct count</a>';
                $(element).prepend($(spanclass));
                $(element).prepend($(count));
                element = element.nextSibling.firstChild;
                element.title += " Distinct count";
                element.innerHTML += " Distinct count";
                element.nextSibling.value += " Distinct count";


                break;

            case 3:
                count.innerHTML = "<a href='#'onclick='Aggregates(this)'>Minimum</a>";
                $(element).prepend($(spanclass));
                $(element).prepend($(count));
                element = element.nextSibling.firstChild;

                element.title += " Minimum";
                element.innerHTML += " Minimum";
                element.nextSibling.value += " Minimum";


                break;

            case 4:
                count.innerHTML = '<a href="#"onclick="Aggregates(this)">Maximum</a>';
                $(element).prepend($(spanclass));
                $(element).prepend($(count));
                element = element.nextSibling.firstChild;

                element.title += " Maximum";
                element.innerHTML += " Maximum";
                element.nextSibling.value += " Maximum";
                break;

            case 5:

                var divCont = document.createElement('div');
                divCont.className = "eqjs-qc-colelement eqjs-qc-attrelement";
                divCont.innerHTML = '<a href="#" title="Custom SQL Column"onclick="CustomFunction(this)">Custom SQL Column</a>' + '<input style="width:100%; display:none;" value=' + element.innerText + '>'


                var divCont2 = document.createElement('div');
                divCont2.className = "eqjs-qc-colelement";
                divCont2.innerHTML = "<span title=': ' >: </span>"


                var divCont3 = document.createElement('div');
                divCont3.className = "eqjs-qc-colelement eqjs-qc-attrelement";
                divCont3.innerHTML = '<a href="#" title ="String" onclick="customStringDropdown(this)"> String</a>'

                $(element).children().hide();


                var anchorTag = '<a href="#" onclick="TitleEdit(this)" title= "Custom SQL Column" >Custom SQL Column </a>'

                var inputTag = document.createElement('input');
                inputTag.value = "Custom SQL Column";
                inputTag.style = "display:none";




                $(element).prepend($(divCont3));
                $(element).prepend($(divCont2));
                $(element).prepend($(divCont));

                element = element.nextSibling;
                $(element).children().hide();
                $(element).prepend($(inputTag));
                $(element).prepend($(anchorTag));

                break;

            default:
        }

    }


    /// This function is to  replace the string with the selected item

    function DataTypeMenuFunc(DatatypeValue) {

        temporaryDetail.innerHTML = DatatypeValue.innerText;

    }

</script>


<script>
    function ConditionAll(Value) {
        var PositionDetails = Value.getBoundingClientRect();
        document.getElementById('QueryPanel-LinkTypeMenu').style.display = "block";
        document.getElementById('QueryPanel-LinkTypeMenu').style.top = (PositionDetails.bottom + 3) + "px";
        document.getElementById('QueryPanel-LinkTypeMenu').style.left = (PositionDetails.left + 5) + "px";

    }

    window.onclick = function (event) {

        if (event.target.localName != 'a' && event.srcElement.className != 'eqjs-menu-itemDiv eqjs-menu-itemDiv-hasChildren') {

            document.getElementById('QueryPanel-LinkTypeMenu').style.display = "none";
            document.getElementById('QueryPanel-EntitiesMenu').style.display = "none";
            document.getElementById('QueryPanel-EntitiesMenu-children').style.display = "none";

        }


    }
    function ConditionADD(Value) {

        document.getElementById('conditionValue').innerHTML = Value.innerText;
    }

    function NewConditionMenu(Position) {

        var PositionDetails = Position.getBoundingClientRect();
        document.getElementById('QueryPanel-EntitiesMenu').style.display = "block";
        document.getElementById('QueryPanel-EntitiesMenu').style.top = (PositionDetails.bottom + 3) + "px";
        document.getElementById('QueryPanel-EntitiesMenu').style.left = (PositionDetails.left + 5) + "px";


    }

    window.onload = function () {

        var Key = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.FieldValues.Keys));
        var KeyValues = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.FieldValues.Values));

        for (var item = 0; item < Key.length; item++) {
            var ChildrenDiv = document.createElement('div');
            ChildrenDiv.className = "eqjs-menu-itemDiv eqjs-menu-itemDiv-hasChildren";
            ChildrenDiv.innerHTML = Key[item].tableName;
            ChildrenDiv.onclick = function () { ConditionChildMenu(this) }
            var childSpan = document.createElement('span');
            childSpan.className = "eqjs-menu-itemDiv-arrow";
            childSpan.innerHTML = "&gt;";

            ChildrenDiv.appendChild(childSpan);

            var element = document.getElementById('QueryPanel-EntitiesMenu').children[0];


            element.appendChild(ChildrenDiv);
        }
    }

    function ConditionChildMenu(itemvalue) {
        valueDetail = itemvalue.innerText;
        valueDetail = valueDetail.replace("\n>", "");
        var Key = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.FieldValues.Keys));
        var KeyValues = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.FieldValues.Values));
        var element = document.getElementById('QueryPanel-EntitiesMenu-children');
        element.style.display = "block";
        element = element.children[0];
        element.innerHTML = "";
        for (var item = 0; item < Key.length; item++) {

            if (valueDetail == Key[item].tableName) {
                for (var value = 0; value < KeyValues[item].length; value++) {

                    var ChildrenDiv = document.createElement('div');
                    ChildrenDiv.className = "eqjs-menu-itemDiv";
                    ChildrenDiv.onclick = function () { ConditionDetails(valueDetail, this) }
                    ChildrenDiv.innerHTML = KeyValues[item][value].coloumnName;
                    element.appendChild(ChildrenDiv);

                }
                var PositionDetails = itemvalue.getBoundingClientRect();
                document.getElementById('QueryPanel-EntitiesMenu-children').style.display = "block";
                document.getElementById('QueryPanel-EntitiesMenu-children').style.top = (PositionDetails.top + 3) + "px";
                document.getElementById('QueryPanel-EntitiesMenu-children').style.left = (PositionDetails.right + 5) + "px";

                break;
            }

        }
    }

    function ConditionDetails(ValueDetail, Innertext) {


 var detail = document.getElementById('condition-data');
        debugger;

         var ParentDiv = document.createElement('div');
        ParentDiv.className = "eqjs-qp-row eqjs-qp-row-condition eqjs-qp-level-1";

        if (detail.children.length >= 1) {
            var conditionAnd = document.createElement('span')
            conditionAnd.className = "eqjs-qp-condelement eqjs-qp-condition-conjuction";
             conditionAnd.title = "and";
             conditionAnd.innerHTML = "and";
             ParentDiv.appendChild(conditionAnd);
         }

        //var ConditionListDiv = document.createElement('div');
        //ConditionListDiv.className = "eqjs-qp-conditions null eqjs-qp-conditions-root";


        var FirstConditionElement = document.createElement('div')
        FirstConditionElement.className = "eqjs-qp-condelement eqjs-qp-attrelement";


        var ConditionElement1 = '<a href="javascript:void(0)" title=' + ValueDetail + ' ' + Innertext.innerText + '>' + ValueDetail + ' ' + Innertext.innerText + '</a>'
        FirstConditionElement.innerHTML = ConditionElement1;



        var MidElement = document.createElement('div')
        MidElement.className = "eqjs-qp-condelement eqjs-qp-operelement";
        MidElement.innerHTML = '<a href = "javascript:void(0)" title ="starts with">starts with</a>';

        var LastElement = document.createElement('div')
        LastElement.className = "eqjs-qp-condelement"
        LastElement.innerHTML = '<a href="javascript:void(0)"onclick="ConditionValueEdit(this)" title = "[enter value]" > [enter value] </a><input class="eqjs-qp-ve-editbox" type="text" style="display: none;min-width:0px">'


       
        ParentDiv.appendChild(FirstConditionElement);
        ParentDiv.appendChild(MidElement);
        ParentDiv.appendChild(LastElement);

        //ConditionListDiv.appendChild(ParentDiv);
       
        detail.appendChild(ParentDiv);

    }

    function ConditionValueEdit(Value)
    {
        Value.style.display = "none";
        var inputdata = Value.nextSibling;
        inputdata.style.display = "block";
        //titledetail.innerHTML = titledetail.title;
    }
</script>

<div class="eqjs-menu-rootLevel eqjs-menu-levelDiv" style="position: absolute; display: none; visibility: visible; left: 721px; top: 193px; z-index: 10000; font-size: 14px;">
    <div tabindex="1" class="eqjs-menu-scrollDiv" style="overflow: hidden auto; position: relative; width: auto; height: auto;">
        <div class="eqjs-menu-itemDiv" onclick="AggregateFunctionAdd(1)">Count</div>
        <div class="eqjs-menu-itemDiv" onclick="AggregateFunctionAdd(2)">Distinct count</div>
        <div class="eqjs-menu-itemDiv" onclick="AggregateFunctionAdd(3)">Minimum</div>
        <div class="eqjs-menu-itemDiv" onclick="AggregateFunctionAdd(4)">Maximum</div>
        <div class="eqjs-menu-itemDiv"><hr></div>
        <div class="eqjs-menu-itemDiv" onclick="AggregateFunctionAdd(5)">Custom Expression</div>
    </div>
</div>

<div id="ColumnsPanel-SortMenu" class="eqjs-menu-rootLevel eqjs-menu-levelDiv" style="position: absolute; display: none; visibility: visible; left: 280px; top: 193px; z-index: 10000; font-size: 14px;">
    <div tabindex="1" class="eqjs-menu-scrollDiv" style="overflow: hidden auto; position: relative; width: auto; height: auto;">
        <div class="eqjs-menu-itemDiv" onclick="ExpressionPositioning(0)">Not sorted</div>
        <div class="eqjs-menu-itemDiv" onclick="ExpressionPositioning(1)">Ascending</div>
        <div class="eqjs-menu-itemDiv" onclick="ExpressionPositioning(2)">Descending</div>
        <div class="eqjs-menu-itemDiv"><hr></div>
        <div class="eqjs-menu-itemDiv" onclick="ExpressionPositioning(3)">Move to the first</div>
        <div class="eqjs-menu-itemDiv" onclick="ExpressionPositioning(4)">Move to the previous</div>
        <div class="eqjs-menu-itemDiv" onclick="ExpressionPositioning(5)">Move to the next</div>
        <div class="eqjs-menu-itemDiv" onclick="ExpressionPositioning(6)">Move to the last</div>
    </div>
</div>
<div id="DataTypeMenu" class="eqjs-menu-rootLevel eqjs-menu-levelDiv" style="position: absolute; display: none; visibility: visible; left: 614px; top: 189px; z-index: 10000; font-size: 14px;">
    <div tabindex="1" class="eqjs-menu-scrollDiv" style="overflow: hidden auto; position: relative; width: auto; height: auto;">
        <div class="eqjs-menu-itemDiv" onclick="DataTypeMenuFunc(this)">Unknown</div>
        <div class="eqjs-menu-itemDiv" onclick="DataTypeMenuFunc(this)">String</div>
        <div class="eqjs-menu-itemDiv" onclick="DataTypeMenuFunc(this)">Byte</div>
        <div class="eqjs-menu-itemDiv" onclick="DataTypeMenuFunc(this)">Word</div>
        <div class="eqjs-menu-itemDiv" onclick="DataTypeMenuFunc(this)">Int32</div>
        <div class="eqjs-menu-itemDiv" onclick="DataTypeMenuFunc(this)">Int64</div>
        <div class="eqjs-menu-itemDiv" onclick="DataTypeMenuFunc(this)">Bool</div>
        <div class="eqjs-menu-itemDiv" onclick="DataTypeMenuFunc(this)">Float</div>
        <div class="eqjs-menu-itemDiv" onclick="DataTypeMenuFunc(this)">Currency</div>
        <div class="eqjs-menu-itemDiv" onclick="DataTypeMenuFunc(this)">BCD</div>
        <div class="eqjs-menu-itemDiv" onclick="DataTypeMenuFunc(this)">Date</div>
        <div class="eqjs-menu-itemDiv" onclick="DataTypeMenuFunc(this)">Time</div>
        <div class="eqjs-menu-itemDiv" onclick="DataTypeMenuFunc(this)">DateTime</div>
        <div class="eqjs-menu-itemDiv" onclick="DataTypeMenuFunc(this)">Autoinc</div>
        <div class="eqjs-menu-itemDiv" onclick="DataTypeMenuFunc(this)">Memo</div>
        <div class="eqjs-menu-itemDiv" onclick="DataTypeMenuFunc(this)">Blob</div>
        <div class="eqjs-menu-itemDiv" onclick="DataTypeMenuFunc(this)">FixedChar</div>
        <div class="eqjs-menu-itemDiv" onclick="DataTypeMenuFunc(this)">Guid</div>
        <div class="eqjs-menu-itemDiv" onclick="DataTypeMenuFunc(this)">Geometry</div>
        <div class="eqjs-menu-itemDiv" onclick="DataTypeMenuFunc(this)">Geography</div>
    </div>
</div>


<div id="QueryPanel-LinkTypeMenu" class="eqjs-menu-rootLevel eqjs-menu-levelDiv" style="position: absolute; display: none; visibility: visible; left: 500px; top: 365px; z-index: 10000; font-size: 14px;">
    <div tabindex="1" class="eqjs-menu-scrollDiv" style="overflow: hidden auto; position: relative; width: auto; height: auto;">
        <div class="eqjs-menu-itemDiv" onclick="ConditionADD(this)">all</div>
        <div class="eqjs-menu-itemDiv" onclick="ConditionADD(this)">any</div>
        <div class="eqjs-menu-itemDiv" onclick="ConditionADD(this)">none</div>
        <div class="eqjs-menu-itemDiv" onclick="ConditionADD(this)">not all</div>
    </div>
</div>


<div id="QueryPanel-EntitiesMenu" class="eqjs-menu-rootLevel eqjs-menu-levelDiv" style="position: absolute; display: none; font-size: 14px;">
    <div tabindex="1" class="eqjs-menu-scrollDiv" style="overflow-y:  auto; position: relative; width: auto; height: 200px;"></div>
</div>

<div id="QueryPanel-EntitiesMenu-children" class="eqjs-menu-levelDiv" style="position: absolute; display: none; ">
    <div tabindex="1" class="eqjs-menu-scrollDiv" id="" style="overflow-y: auto; position: relative; width: auto; max-height: 200px;"></div>
</div>


@*Condition Dropdown*@
@*<div id="opmn-noq7e2f98g" class="eqjs-menu-rootLevel eqjs-menu-levelDiv" style="position: absolute; display: block; visibility: visible; left: 502px; top: 383px; z-index: 10000; font-size: 14px;">
    <div tabindex="1" class="eqjs-menu-scrollDiv" style="overflow: hidden auto; position: relative; width: auto; height: 383px;">
        <div class="eqjs-menu-itemDiv">starts with</div>
        <div class="eqjs-menu-itemDiv">contains</div>
        <div class="eqjs-menu-itemDiv">is equal to</div>
        <div class="eqjs-menu-itemDiv">is in list</div>
        <div class="eqjs-menu-itemDiv">does not start with</div>
        <div class="eqjs-menu-itemDiv">does not contain</div>
        <div class="eqjs-menu-itemDiv">is not equal to</div>
        <div class="eqjs-menu-itemDiv">is not in list</div>
        <div class="eqjs-menu-itemDiv">in sub query</div>
        <div class="eqjs-menu-itemDiv">not in sub query</div>
        <div class="eqjs-menu-itemDiv">is null</div>
        <div class="eqjs-menu-itemDiv">is not null</div>
    </div>
</div>*@