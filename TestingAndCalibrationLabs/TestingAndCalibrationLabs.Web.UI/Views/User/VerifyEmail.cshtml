@model TestingAndCalibrationLabs.Web.UI.Models.UserDTO
@{
    ViewData["Title"] = "VerifyEmail";
}
<div class="padding-login bg-white d-flex flex-column min-vh-100 justify-content-center align-items-center bg-login" style="margin-bottom:80px;">
    <div asp-action="VerifyEmail" asp-controller="User" method="post">
        <input type="hidden" asp-for="userId">

        <div class="container bg-white" style="max-width:2050px;border-radius:6px;padding:10px;">
            <ul class="nav nav-tabs topnav" id="myTab" role="tablist" style="width:100%;">
                <li class="nav-item login-tab-click" role="presentation" style="width:100%; margin:20px;">
                    <button class="nav-link login-tab-click active" id="home-tab" data-bs-toggle="tab" data-bs-target="#Sign-In" type="button" role="tab" aria-controls="home" bg-color="orange" aria-selected="true" href="#signInBoot" style="width:100%"><b>VERIFY EMAIL</b></button>
                </li>
            </ul>
            <center>
                <b>
                    Please !
                    Enter Your Registered Email<br>
                    To Get Verification Code!
                </b>
            </center>
            <div class="col-lg-20 col-sm-0 col-xs-0 mt-2 form-element-for-common-control right-pd-frm-input" style="margin:20px;">
                <input class="form-input width-full black-border" id="EmailValue" style="width:300px;" type="email" placeholder=" " name="Email" asp-validation-for="Email" , item.IsRequired onchange="this.setAttribute('value',this.value)" required>
                <label class="form-label" style="color:gray;" for=Email>
                    Email
                    <span class="red-color">*</span>
                </label>
            </div>
                <button type="submit" class="btn btn-success text-center btn-block" onclick="User()" style="width:80px; margin-left:20px">Submit</button>
        </div>
  </div>
</div>
<div>
    <div class="d-flex justify-content-center fixed-bottom">
        <div class="alert alert-success" role="alert" id="snackbarsuccess">
            <div class="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation6 MuiAlert-root MuiAlert-filledSuccess MuiAlert-filled css-1lgz3mj" role="alert">
                <div class="MuiAlert-icon css-1l54tgj">
                    <svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-1cw4hi4" focusable="false" aria-hidden="true" viewBox="0 0 24 24">
                        <path d="M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"></path>
                    </svg>
                </div><div class="MuiAlert-message css-1xsto0d" id="sucess">We Send OTP successfully!</div>
            </div>
        </div>
    </div>
</div>
<div>
    <div class="d-flex justify-content-center fixed-bottom">
        <div role="alert" id="snackbarerror">
            <div class="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation6 MuiAlert-root MuiAlert-filledError MuiAlert-filled css-1ufabz4" role="alert">
                <div class="MuiAlert-icon css-1l54tgj">
                    <svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-1cw4hi4" focusable="false" viewBox="0 0 24 24">
                        <path d="M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"></path>
                    </svg>
                </div>
                <div class="MuiAlert-message css-1xsto0d" id="errormessage">!</div>
            </div>
        </div>
    </div>
</div>
<script>
    function myFunction() {
        var x = document.getElementById("snackbarsuccess");
        x.className = "show";
        setTimeout(function () { x.className = x.className.replace("show", ""); }, 3000);
    }
    //This function will display the Failure snackbar
    function myFunctionError() {
        var x = document.getElementById("snackbarerror");
        x.className = "show";
        setTimeout(function () { x.className = x.className.replace("show", ""); }, 3000);
    }
    function User() {
        WheelLoader();
        var keyValuepair = {};
        keyValuepair.Email = $("#EmailValue").val();
        keyValuepair.userId = $("#userId").val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("VerifyEmail","User")",
            dataType: 'json',
            data: keyValuepair,
            success: function (result) {
                HideWheelLoader();
                myFunction();
                SuccessMessage(NotificationNumbers++, "We Send OTP successfully!!");
                var userId = result;
                window.location.href = '@Url.Action("EmailVerify","User")';
            },
            error: function (result) {
                HideWheelLoader();
                var newresponseJSON = result.responseJSON;
                var newErrorMessage = newresponseJSON;
                for (var i = 0; i <= newErrorMessage.length; i++) {
                    myFunctionError();
                    document.getElementById("errormessage").innerHTML = newErrorMessage[i].reason;
                    ErrorMessage(NotificationNumbers++, newErrorMessage[i].reason);
                    document.getElementById(newErrorMessage[i].sourceId).style.border = "2px solid red";
                }
            }
        });
    }
</script>