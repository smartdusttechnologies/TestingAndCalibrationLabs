@model IEnumerable<TestingAndCalibrationLabs.Web.UI.Models.PasswordPolicyDTO>
@{
    // Set the page title
    ViewData["Title"] = "Index";
}
<h1>Password Policy</h1>
<p>
    <!-- Create a link to create a new Password Policy -->
    <a asp-action="Create">Create New</a>
</p>
<div class="border width-full" style="margin:0;padding:0;border-bottom:2px solid !important;">
    <div class="row mb-1">
    </div>
</div>
<div class="">
    <!-- Display a table of Password Policy data -->
    <table id="gridui" class="table table-striped dt-responsive nowrap cell-border" width="100%" cellspacing="0">
        <thead>
            <tr>
                <!-- Table headers for various Password Policy properties -->
                <th>
                    @Html.DisplayNameFor(model => model.MinCaps)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MinSmallChars)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MinSpecialChars)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MinNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MinLength)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AllowUserName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DisAllPastPassword)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DisAllowedChars)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ChangeIntervalDays)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrgId)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <!-- Display Password Policy data for each item -->
                    <td>
                        @Html.DisplayFor(modelItem => item.MinCaps)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MinSmallChars)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MinSpecialChars)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MinNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MinLength)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AllowUserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DisAllPastPassword)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DisAllowedChars)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ChangeIntervalDays)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrgId)
                    </td>
                    <td>
                        <!-- Create action links for editing and deleting Password Policies -->
                    @Html.ActionLink("", "Edit", new { id = item.Id }, new { @class = "fas fa-edit" }) |
                        @Html.ActionLink("", "Delete", new { id = item.Id }, new { @class = "fa fa-trash" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@if (ViewBag.IsSuccess != null && ViewBag.IsSuccess)
{
    <!-- Display a success message if ViewBag.IsSuccess is true -->
    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
        <symbol id="check-circle-fill" fill="currentColor" viewBox="0 0 16 16">
            <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
        </symbol>
    </svg>
    <!-- Render a partial view with a welcome message -->
    await Html.RenderPartialAsync("_SnackBar", "Welcome to ui Password Policy");
}
<script>
    // Initialize DataTable with specific options
    oTable = $('#gridui').DataTable({
        lengthMenu: [
            [5, 10, 25, 50, -1],
            [5, 10, 25, 50, 'All'],
        ],
        scrollX: true,
    });
    // Handle grid search using keyup event
    $('#gridsearch').keyup(function () {
        oTable.search($(this).val()).draw();
    })
</script>