@model TestingAndCalibrationLabs.Web.UI.Models.RecordDTO
@{
    ViewData["Title"] = "Create";
}
<h1>Create</h1>
<div class="container-fluid">
    <div>
        <form id="sampleForm" asp-controller="Sample" asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="UiPageId" />
             <div class="row">
                @foreach (var item in Model.Fields)
                {
                    if (item.UiControlType == "textarea")
                    {
                                                    <div class="form-group" style="margin-left:40px">
                                                        <label asp-for="@item.UiControlDisplayName">@item.UiControlDisplayName</label>
                                                        <textarea  id="@item.Id" title="@item.UiControlDisplayName" rows="4" cols="50"></textarea>
                                                        <span asp-validation-for="@item.UiControlDisplayName" class="text-danger"></span>
                                                    </div>
                    }
                    else
                    {
                                                         <div class="col-lg-6 col-sm-12 col-xs-12 mt-3 form-element right-pd-frm-input">
                                                              <input class="form-input width-full" type="@item.UiControlType" id="@item.Id"  placeholder=" " name="@item.UiControlDisplayName" onchange="this.setAttribute('value',this.value)">
                                                               <label class="form-label" for="@item.UiControlDisplayName">@item.UiControlDisplayName</label>
                                                                <span asp-validation-for="@item.UiControlDisplayName" class="text-danger"></span>
                                                            </div>

                        @*  <div class="form-group" style="margin-left:40px">
                            <label asp-for="@item.UiControlDisplayName">@item.UiControlDisplayName</label>
                            <input type="@item.UiControlType" id="@item.Id" title="@item.UiControlDisplayName" />
                            <span asp-validation-for="@item.UiControlDisplayName" class="text-danger"></span>
                            </div>*@
                    }
                }
            </div>
            <div class="form-group">
                <input type="button" id="createbtn" value="Create" class="btn btn-primary mt-3" onclick="AjaxFormSubmit()" 

            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>


<div>
   
    <div class="d-flex justify-content-center fixed-bottom">
        <div class="alert alert-success" role="alert" id="snackbarsuccess">
            <svg class="bi flex-shrink-0 me-2" width="34" height="9" role="img" aria-label="Success:"><use xlink:href="#check-circle-fill" /></svg>
            <span><strong>Submitted Successfully!!! Thank You</strong></span>
        </div>
    </div>
    </div>

<div>
   
    <div class="d-flex justify-content-center fixed-bottom">
        <div class="alert alert-success" role="alert" id="snackbarerror">
            <svg class="bi flex-shrink-0 me-2" width="34" height="9" role="img" aria-label="Alert:"><use xlink:href="#check-circle-fill" /></svg>
            <span><strong><p id="errormessage"></p></strong></span>
        </div>
    </div>
    </div>


    <script>
     //This function will display the success snackbar
      function myFunction() {
          var x = document.getElementById("snackbarsuccess");
          x.className = "show";
          setTimeout(function(){ x.className = x.className.replace("show", ""); }, 3000);
       }

      //From this code our form willl be reset 
          //#region 
     //       $("#sampleForm").find(':input').each(function() {
     //        switch(this.type) {
     //                 case 'password':
     //                 case 'text':
     //                 case 'textarea':
     //                 case 'file':
     //                 case 'select-one':
     //                 case 'select-multiple':
     //                 case 'date':
     //                 case 'number':
     //                 case 'tel':
     //                 case 'email':
     //                       jQuery(this).val('');
     //                       break;
     //                 case 'checkbox':
     //                 case 'radio':
     //                      this.checked = false;
     //                      break;
     //  }
     //         });

     //}
         //#endregion
 
         //This function will display the Failure snackbar
          function myFunctionError() {
          var x = document.getElementById("snackbarerror");
          x.className = "show";
          setTimeout(function(){ x.className = x.className.replace("show", ""); }, 3000);
       }
   </script>

<script type="text/javascript">
    function AjaxFormSubmit() {
        //Set the URL.

        var url = $("#sampleForm").attr("action");
        var modelData = JSON.parse('@Json.Serialize(Model)');   
        var uiPageMetaData = modelData.fields;
        var fieldValues = [];

        for (let i = 0; i < uiPageMetaData.length; i++) {
            var fieldId = uiPageMetaData[i].id;
            var fieldValue = $('#' + fieldId).val();
            var keyValuepair = {};
            keyValuepair.UiControlId = fieldId;
            keyValuepair.Value = fieldValue;
            fieldValues.push(keyValuepair)

        }

        var uiPageId = parseInt($("#UiPageId").val())

        $.ajax({
            type: 'POST',
            url: url,
            data: { "UiPageId" : uiPageId, "FieldValues" : fieldValues},
            success: function (response) {
                myFunction();                      //Calling myFunction javascript function 
                var nuiPageMetaData= response.fields;
                var a = response.fieldValues;
                for (let i = 0; i < nuiPageMetaData.length; i++) {
                var nfieldId = nuiPageMetaData[i].id;
                $('#' + nfieldId).val('');         //Assigning a empty values to input fields
               }

                // Putting data back when the form failed to sumbit
                //var c = response.errorMessage;
                //if(c.reason == null){
                //var nuiPageMetaData= response.fields;
                //var a = response.fieldValues;
                //for (let i = 0; i < nuiPageMetaData.length; i++) 
                // {
                        //var nfieldId = nuiPageMetaData[i].id;
                        //var result = a.find(obj => {
                        // // Returns the object where
                        //// the given property has some value 
                        //return obj.uiControlId === nfieldId
                        //})

                        //if(result == undefined)
                        // {
                             // $('#' + nfieldId).val('');
                        // }
                 //}

                },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                var newresponseJSON = response.responseJSON;                    //assiging the values of responseJson to  newresponseJSON
                var newErrorMessage=newresponseJSON.errorMessage;               //assiging the values of errorMessage to  newErrorMessage
                myFunctionError();                                              //Calling myFunctionError javacript function
                document.getElementById("errormessage").innerHTML = newErrorMessage.reason;         //Sending the reason to html 
                //alert(response.responseText);
            }
        });
    }
</script>
