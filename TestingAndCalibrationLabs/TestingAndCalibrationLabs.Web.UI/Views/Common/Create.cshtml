@model TestingAndCalibrationLabs.Web.UI.Models.RecordDTO
@{
    ViewData["Title"] = "Create";
}
<h1>Create</h1>
<div class="container-fluid">
    <div>
        <form id="commonForm" asp-controller="Common" asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="UiPageId" />
            <div class="row">
                @foreach (var item in Model.Fields)
                {
                    if (item.UiControlTypeName == "textarea")
                    {
                        <div class="form-group" style="margin-left:40px">
                            <label asp-for="@item.UiControlDisplayName">@item.UiControlDisplayName</label>
                            <textarea id="@item.Id" title="@item.UiControlDisplayName" @item.IsRequired rows="4" cols="50"></textarea>
                            <span asp-validation-for="@item.UiControlDisplayName" class="text-danger"></span>
                        </div>
                    }
                    else if (item.UiControlTypeName == "file")
                    {
                        <div class="col-lg-6 col-sm-12 col-xs-12 mt-3 form-element right-pd-frm-input">
                            <input class="form-input width-full" type="@item.UiControlTypeName" id="@item.Id" placeholder=" " name="@item.UiControlDisplayName" item.IsRequired onchange="this.setAttribute('value',this.value)">
                            <label class="form-label" for="@item.UiControlDisplayName">@item.UiControlDisplayName</label>
                            <span asp-validation-for="@item.UiControlDisplayName" class="text-danger"></span>
                        </div>
                    }
                    else if (item.UiControlTypeName == "card")
                    {
                        <div class="@item.UiControlTypeName" style="width: 18rem;">
                            <img src="..." class="card-img-top" alt="...">
                            <div class="card-body">
                                <h5 class="card-title">Card title</h5>
                                <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                                <a href="#" class="btn btn-primary">Go somewhere</a>
                            </div>
                        </div>
                    }
                    else if (item.UiControlTypeName == "search")
                    {
                        <div class="col-lg-6 col-sm-12 col-xs-12 mt-3 form-element right-pd-frm-input">
                            <input class="form-input width-full" style="color: red;" type="@item.UiControlTypeName" id="@item.Id" placeholder=" " name="@item.UiControlDisplayName" @item.IsRequired onchange="this.setAttribute('value',this.value)">
                            <label class="form-label" for="@item.UiControlDisplayName">@item.UiControlDisplayName</label>
                            <span asp-validation-for="@item.UiControlDisplayName" class="text-danger"></span>
                        </div>
                    }
                    else if (item.UiControlTypeName == "Calender")
                    {
                        @* <div class="col-lg-6 col-sm-12 col-xs-12 mt-3 form-element right-pd-frm-input">
                <input class="form-input width-full" style="color: red;" type="@item.UiControlType" id="@item.Id"  placeholder=" " name="@item.UiControlDisplayName" onchange="this.setAttribute('value',this.value)">
                <label class="form-label" for="@item.UiControlDisplayName">@item.UiControlDisplayName</label>
                <span asp-validation-for="@item.UiControlDisplayName" class="text-danger"></span>
                </div>*@
                    }
                    else if (item.UiControlTypeName == "dropdown")
                    {
                        <select hidden id="metadataId">
                            <option value="@item.Id"></option>
                        </select>
                        <div class="col-lg-8  col-sm-12 col-xs-12 mt-3 form-element right-pd-input">
                            <label for="@item.UiControlTypeName" class="form-label"></label>
                            <select class="form-input " onclick="addContentInSelect()" name="@item.UiControlTypeName" id="DropDownList_@item.Id" onchange="this.setAttribute('value',this.value)" for="@item.UiControlTypeName">
                                <option disabled="disabled" selected>@item.UiControlDisplayName ...</option>

                            </select>
                        </div>
                    }
                    else
                    {
                        <div class="col-lg-6 col-sm-12 col-xs-12 mt-3 form-element right-pd-frm-input">
                            <input class="form-input width-full" type="@item.UiControlTypeName" id="@item.Id" placeholder=" " name="@item.UiControlDisplayName" onchange="this.setAttribute('value',this.value)">
                            <label class="form-label" for="@item.UiControlDisplayName">@item.UiControlDisplayName</label>
                            <span asp-validation-for="@item.UiControlDisplayName" class="text-danger"></span>
                        </div>
                        @*
                <div class="form-group" style="margin-left:40px">
                <label asp-for="@item.UiControlDisplayName">@item.UiControlDisplayName</label>
                <input type="@item.UiControlTypeName" id="@item.Id" title="@item.UiControlDisplayName" />
                <span asp-validation-for="@item.UiControlDisplayName" class="text-danger"></span>
                </div>*@
                    }
                }
            </div>
            <div class="form-group">
                <input type="button" id="createbtn" value="Create" class="btn btn-primary mt-3" onclick="AjaxFormSubmit()" />
            </div>
        </form>
        <input type="hidden" value="" name="lefid" id="lefid" />
    </div>
</div>
<div>
    <a asp-action="Index" asp-route-id="@Model.UiPageId">Back to List</a>
</div>
<div>
    <div class="d-flex justify-content-center fixed-bottom">
        <div class="alert alert-success" role="alert" id="snackbarsuccess">
            <div class="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation6 MuiAlert-root MuiAlert-filledSuccess MuiAlert-filled css-1lgz3mj" role="alert">
                <div class="MuiAlert-icon css-1l54tgj">
                    <svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-1cw4hi4" focusable="false" aria-hidden="true" viewBox="0 0 24 24">
                        <path d="M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"></path>
                    </svg>
                </div><div class="MuiAlert-message css-1xsto0d">Saved successfully!</div>
            </div>
        </div>
    </div>
</div>
<div>
    <div class="d-flex justify-content-center fixed-bottom">
        <div role="alert" id="snackbarerror">
            <div class="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation6 MuiAlert-root MuiAlert-filledError MuiAlert-filled css-1ufabz4" role="alert">
                <div class="MuiAlert-icon css-1l54tgj">
                    <svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-1cw4hi4" focusable="false" viewBox="0 0 24 24">
                        <path d="M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"></path>
                    </svg>
                </div>
                <div class="MuiAlert-message css-1xsto0d" id="errormessage">!</div>
            </div>
        </div>
    </div>
</div>
<script>
    //This function will display the success snackbar
    function myFunction() {
        var x = document.getElementById("snackbarsuccess");
        x.className = "show";
        setTimeout(function () { x.className = x.className.replace("show", ""); }, 3000);
    }

    //From this code our form willl be reset
    //#region
    //       $("#sampleForm").find(':input').each(function() {
    //        switch(this.type) {
    //                 case 'password':
    //                 case 'text':
    //                 case 'textarea':
    //                 case 'file':
    //                 case 'select-one':
    //                 case 'select-multiple':
    //                 case 'date':
    //                 case 'number':
    //                 case 'tel':
    //                 case 'email':
    //                       jQuery(this).val('');
    //                       break;
    //                 case 'checkbox':
    //                 case 'radio':
    //                      this.checked = false;
    //                      break;
    //  }
    //         });

    //}
    //#endregion

    //This function will display the Failure snackbar
    function myFunctionError() {
        var x = document.getElementById("snackbarerror");
        x.className = "show";
        setTimeout(function () { x.className = x.className.replace("show", ""); }, 3000);

    }
    var count=0;
    function addContentInSelect() {
        var metadataId = $('#metadataId').find(":selected").val();
        
       if(count==0){
           count++;
        $.ajax({
            type: "POST",
            url: "@Url.Action("Get","UiPageMetadataCharacteristics")",
            data: { id : metadataId},
            success: function (response) {
                debugger;
                for(var i=0; i < response.length; i++){
                    var name = response[i].lookupName;
                    console.log(name);
                        var divId = "#DropDownList_" + response[i].uiPageMetadataId;
                    console.log(divId);
                    $(divId).append("<option value='"+name+"'>"+name+"</option>");
                }
            },
            error: function (req, status, error) {
            }
        });
        }
        else{

        }
    }
</script>

<script type="text/javascript">
    function AjaxFormSubmit() {
        //Set the URL.
        var x = document.getElementById("lefid").value;
        if (document.getElementById(x) != null && document.getElementById(x) != undefined) {
            document.getElementById(x).style.border = "1px solid black ";
        }

        var url = $("#commonForm").attr("action");
        var modelData = JSON.parse('@Json.Serialize(Model)');
        var uiPageMetaData = modelData.fields;
        var fieldValues = [];

        for (let i = 0; i < uiPageMetaData.length; i++) {
            var fieldId = uiPageMetaData[i].id;
            var fieldValue = $('#' + fieldId).val();
            var keyValuepair = {};
            keyValuepair.UiControlId = fieldId;
            keyValuepair.Value = fieldValue;
            fieldValues.push(keyValuepair)
        }
        var uiPageId = parseInt($("#UiPageId").val())

        $.ajax({
            type: 'POST',
            url: url,
            data: { "UiPageId": uiPageId, "FieldValues": fieldValues },
            success: function (response) {
                myFunction();                      //Calling myFunction javascript function
                var nuiPageMetaData = response.fields;
                var a = response.fieldValues;
                for (let i = 0; i < nuiPageMetaData.length; i++) {
                    var nfieldId = nuiPageMetaData[i].id;
                    $('#' + nfieldId).val('');         //Assigning a empty values to input fields
                }
                // Putting data back when the form failed to sumbit
                //var c = response.errorMessage;
                //if(c.reason == null){
                //var nuiPageMetaData= response.fields;
                //var a = response.fieldValues;
                //for (let i = 0; i < nuiPageMetaData.length; i++)
                // {
                //var nfieldId = nuiPageMetaData[i].id;
                //var result = a.find(obj => {
                // // Returns the object where
                //// the given property has some value
                //return obj.uiControlId === nfieldId
                //})

                //if(result == undefined)
                // {
                // $('#' + nfieldId).val('');
                // }
                //}
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                var newresponseJSON = response.responseJSON;                    //assiging the values of responseJson to  newresponseJSON
                var newErrorMessage = newresponseJSON.errorMessage;               //assiging the values of errorMessage to  newErrorMessage
                //console.log(response.fieldId);
                document.getElementById("lefid").value = newErrorMessage.sourceId;
                var namea = document.getElementById(newErrorMessage.sourceId);
                var txtname = namea.name;
                myFunctionError();                                              //Calling myFunctionError javacript function
                document.getElementById("errormessage").innerHTML = newErrorMessage.reason;
                //    var s = newErrorMessage.fid//Sending the reason to html
                document.getElementById(newErrorMessage.sourceId).style.border = "2px solid red";
                //        }
                //        else{
                //document.getElementByClassName("form-input").style.border = "1px solid black";
                //        }
                //document.getElementById(newErrorMessage.fid).classList.add("border");

                //document.getElementById(newErrorMessage.fid).classList.add("border-danger");

                //  newErrorMessage.fid.style.border = "1px solid red";


                //var i =result;
                //collection[i].style.border = "1px solid red";
                //alert(response.responseText);
            }
        });
    }
</script>
