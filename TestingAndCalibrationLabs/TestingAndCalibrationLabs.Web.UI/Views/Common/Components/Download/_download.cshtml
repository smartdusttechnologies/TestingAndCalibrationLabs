@model TestingAndCalibrationLabs.Web.UI.Models.Node<TestingAndCalibrationLabs.Web.UI.Models.LayoutDTO>
<!-- Send Button Take Input Modal Popup -->
<style>
    #loader-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.8);
        z-index: 9999;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    #loader {
        border: 16px solid #f3f3f3;
        border-radius: 50%;
        border-top: 16px solid #3498db;
        width: 120px;
        height: 120px;
        animation: spin 2s linear infinite;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

</style>

<div class="modal fade" id="sendModal" tabindex="-1" role="dialog" aria-labelledby="sendHeader" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="sendHeader">Enter Your Email & Send</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body" >
                <div class="col-lg-12  col-sm-12 col-xs-12 mt-3 form-element-for-common-control  right-pd-frm-input">
                    <input class="form-input width-full black-border" type="email" placeholder=" " id="sendMailEmail" name="sendMailEmail" onchange="this.setAttribute('value',this.value)" />
                    <label class="form-label" for="sendMailEmail">Email<span class="red-color">*</span></label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="ripple button-base button-second" id="cancleSendModal" data-bs-dismiss="modal">Cancle</button>
                <button type="button" onclick="SendMail()"  class="ripple button-base button-material-primary">Send</button>
            </div>
        </div>
    </div>
</div>
<div id="loader-overlay" style="display:none;">
    <div id="loader"></div>
</div>

<script>
    var modelData;
    $(document).ready(function () {

        modelData = JSON.parse('@Json.Serialize(Model)');
        var displayName = modelData.value.uiPageMetadata.uiControlDisplayName;
        var downloadHtml = '<input type="button" value="' + displayName + '" class="button-base button-material-primary" onclick="GenerateReport()" />'
        var sendHtml = '<input type="button" value="Send" class="button-base button-material-primary" data-toggle="modal" data-target="#sendModal" />'
        $("#sub-mt-btn").append(downloadHtml);
        $("#sub-mt-btn").append(sendHtml);
    });
    // function GenerateReport() {
    //     var metadata = modelData.value.uiPageMetadata.id;
    //     Fileid = document.getElementById('DropdownItem').value;
    //     window.open(`/common/templateGenerate/?recordId=${id}&metadataId=${metadata}&email=null&send=false&FileId=${Fileid}`, '_blank');
    // }
    function GenerateReport() {

        // Show the loader
        $('#loader-overlay').show();
        // var id = modelData.value.uiPageMetadata.someId; // Ensure this is correctly defined and valid
        var metadata = modelData.value.uiPageMetadata.id;
        var ModuleLayoutId = modelData.value.uiPageMetadata.moduleLayoutId;
        var pageTypeId = modelData.value.uiPageMetadata.uiPageTypeId;
        var parent = modelData.value.uiPageMetadata.parentId;
        var Fileid = document.getElementById('DropdownItem').value;
        var url = '/Common/TemplateGenerate/';

        var params = new URLSearchParams();
        params.append('recordId', id);
        params.append('metadataId', metadata);
        params.append('email', null);
        params.append('send', false);
        params.append('moduleLayoutId', ModuleLayoutId);
        params.append('UipagetypeId', pageTypeId);
        params.append('parentId', parent);
        params.append('fileId', Fileid);

        console.log("Data being sent: " + params.toString()); // Log the data to verify it is correct

        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: params.toString()
        })
            .then(response => response.blob()) // Convert response to Blob
            .then(blob => {
                // Create object URL for the PDF blob
                const pdfUrl = URL.createObjectURL(blob);

                // Open the PDF URL in a new tab
                window.open(pdfUrl, '_blank');
                // Hide loader after the PDF is opened
                $('#loader-overlay').hide();
            })
            .catch(error => {
                console.error("Error during fetch: ", error);
                // Hide loader if an error occurs
                $('#loader-overlay').hide();
            });
    }
    function SendMail(){
        let emailId = $("#sendMailEmail").val();
        var id = $("#Id").val();
        var metadata = modelData.value.uiPageMetadata.id;
        $.ajax({
            type: "POST",
            url: "@Url.Action("TemplateGenerate","Common")",
            data: { "recordId": id,"metadataId":metadata,"email":emailId,"send":true },
            success: function (response) {
                $('#cancleSendModal').click();
            },
            error: function (req, status, error) {
            }
        });


        var newURL = `/common/DownloadReport/?id=${id}`;
        window.location.href = newURL;
    }
</script>
