@model TestingAndCalibrationLabs.Web.UI.Models.RecordsDTO
<input type="hidden" asp-for="ModuleId" />
<div class="border width-full" style="margin:0;padding:0;border-bottom:2px solid !important;">
    <div class="row mb-1">
        <div class="col-xs-4 col-sm-4 col-md-4 col-lg-6 mt-2">
            <h2 class="mb-2 ms-1 me-1" style="padding:0px 12px;">@Model.Fields.First().UiPageTypeName</h2>
        </div>
        <div class="col-xs-4 col-sm-4 col-md-4 col-lg-3 mt-2">
            <a data-toggle="modal" data-target="#insertModal"><i class="fa fa-plus icon-plus"></i></a>
        </div>
        <div class="col-xs-4 col-sm-4 col-md-4 col-lg-3 mt-3">
            <div class="inputSearchGrid text-right">
                <input type="text" id="MultiValueGridSearch" onkeyup="function()" class="light-table-filter inputWithIconSearch " data-table="table-info" placeholder="Search">
                <i class="fa fa-solid fa-magnifying-glass iconForSearchLeft"></i>
                <i class="fa fa-solid fa-xmark iconForSearchRight" onclick="clearText()"></i>
            </div>
        </div>
    </div>
    <div class="table-responsive simple-pagination card shadow border-radius-grid">
        <table id="multiValueGrid" class="table table-striped dt-responsive nowrap cell-border" width="100%" cellspacing="0">
            <thead>
                <tr>
                    @foreach (var item in Model.Fields)
                    {
                        <th> @Html.DisplayFor(fieldItem => item.UiControlDisplayName)</th>
                    }
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.FieldValues)
                {
                    <tr>
                        @foreach (var itemValue in item.Value)
                        {
                            <td>
                                @Html.DisplayFor(modelItem => itemValue.Value)
                            </td>
                        }
                        <td>
                            <a class="fas fa-edit" style="margin:5px;color:rebeccapurple;" data-bs-toggle="modal" data-bs-target="#updateModal" onclick="updateMultiVal(@item.Key)"></a> |
                            <a class="fa fa-trash" style="margin:5px;color:red;" data-bs-toggle="modal" data-bs-target="#deleteModalPopup" onclick="setValue(@item.Key,'deletePopup')"></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<script>
    let recordId = parseInt($("#Id").val());
    let model = JSON.parse('@Json.Serialize(Model)');
    let metadata = model.fields;
    let pageData = model.fieldValues;
    oTable = $('#multiValueGrid').DataTable({
        lengthMenu: [
            [5, 10, 25, 50, -1],
            [5, 10, 25, 50, 'All'],
        ],
        scrollX: true,
    });
    $('#MultiValueGridSearch').keyup(function () {
        oTable.search($(this).val()).draw();
    })
    const clearText = () => {
        const inputID = document.querySelector("#MultiValueGridSearch");
        inputID.value = "";
    }
    //Set The Value To Popup Delete Button
    let setValue = (id, eleId) => $(`#${eleId}`).val(id);

    //Call the DeleteMultiValue Method Of Common Page
    let deleteFun = (id) => {
        let fieldValues = [];
        let keyValuepair = {};
        keyValuepair.RecordId = recordId;
        keyValuepair.SubRecordId = id;
        fieldValues.push(keyValuepair)
        $.ajax({
            type: 'POST',
            url: "@Url.Action("DeleteMultiValue","Common")",
            data: { "Id": recordId, "FieldValues": fieldValues, "UpdatedDate": updatedDateT },
            success: function (response) {
                myFunction();
                window.location.href = "/common/edit/" + recordId;
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
            }
        });
    }
    //In This Function I am Creating Controls For Edit Insert Popup
    $(document).ready(function () {
        for (let i = 0; i < metadata.length; i++) {
            debugger;
            let metadataId = metadata[i].id;
            let controlId = `gridInsertControl-${metadataId}`;
            let updateControlId = `gridUpdateControl-${metadataId}`;
            let uiControlDisplayName = metadata[i].uiControlDisplayName;
            let insertElement = `<div class="col-lg-12  col-sm-12 col-xs-12 mt-3 form-element-for-common-control  right-pd-frm-input">
                                                    <input class="form-input width-full black-border" type="text" id="${controlId}" name="${controlId}" placeholder=" " onchange="this.setAttribute('value',this.value)" />
                                                <label class="form-label" for="${controlId}">${uiControlDisplayName}</label></div>`;
            let updateElement = `<div class="col-lg-12  col-sm-12 col-xs-12 mt-3 form-element-for-common-control  right-pd-frm-input">
                                                    <input class="form-input width-full black-border" type="text" id="${updateControlId}" name="${updateControlId}" placeholder=" " onchange="this.setAttribute('value',this.value)" />
                                                    <label class="form-label" for="${updateControlId}">${uiControlDisplayName}</label></div>`;
            $("#gridPopup").append(insertElement);
            $("#gridPopupUpdate").append(updateElement);
        }
    });
    //Inserting Record
    let InsertMultiValues = () => {
        let fieldValues = [];
        for (let i = 0; i < metadata.length; i++) {
            let metadataId = metadata[i].id;
            let controlId = `#gridInsertControl-${metadataId}`;
            let fieldValue = $(controlId).val();
            let keyValuepair = {};
            keyValuepair.uiPageMetadataId = metadataId;
            keyValuepair.RecordId = recordId;
            keyValuepair.Value = fieldValue;
            keyValuepair.UiPageTypeId = uiPageTypeId;
            fieldValues.push(keyValuepair)
        }
        $.ajax({
            type: 'POST',
            url: "@Url.Action("InsertMultiValue","Common")",
            data: { "Id": recordId, "FieldValues": fieldValues, "UpdatedDate": updatedDateT },
            success: function (response) {
                myFunction();
                window.location.href = "/common/edit/" + recordId;
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
            }
        });
    }
    //Updating Record
    let UpdateMultiValues = (id) => {
        let fieldValues = [];
        for (let x = 0; x < pageData[id].length; x++) {
            let data = pageData[id][x];
            let val = $(`#gridUpdateControl-${data.uiPageMetadataId}`).val();
            let keyValuepair = {};
            keyValuepair.Id = data.id;
            keyValuepair.uiPageMetadataId = data.uiPageMetadataId;
            keyValuepair.RecordId = data.recordId;
            keyValuepair.Value = val;
            keyValuepair.SubRecordId = data.subRecordId;
            keyValuepair.uiPageTypeId = uiPageTypeId;
            fieldValues.push(keyValuepair)
        }
        $.ajax({
            type: 'POST',
            url: "@Url.Action("UpdateMultiValue","Common")",
            data: { "Id": recordId, "FieldValues": fieldValues, "UpdatedDate": updatedDateT },
            success: function (response) {
                myFunction();
                window.location.href = "/common/edit/" + recordId;
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
            }
        });
    }
    //Set The SubRecordId To Use UpdateMultiValue Function
    let updateMultiVal = (id) => {
        $("#savebtn").val(id);
        for (let i = 0; i < pageData[id].length; i++) {
            let data = pageData[id][i];
            $(`#gridUpdateControl-${data.uiPageMetadataId}`).val(data.value);
        }
    }
</script>