@model IEnumerable<ProgressDTO>
<!DOCTYPE html>
<html>

<head>
	<link href='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css'>
	<script src='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js'>
	</script>
	<script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js'>
	</script>
	

	<style>
		* {
			margin: 0;
			padding: 0
		}
		html {
			height: 100%
		}
		h2 {
			color: #2F8D46;
		}
		#form {
			text-align: center;
			position: relative;
			margin-top: 20px
		}
			#form fieldset {
				background: white;
				border: 0 none;
				border-radius: 0.5rem;
				box-sizing: border-box;
				width: 100%;
				margin: 0;
				padding-bottom: 20px;
				position: relative
			}
		.finish {
			text-align: center
		}
		#form fieldset:not(:first-of-type) {
			display: none
		}
		#form .previous-step, .next-step {
			width: 100px;
			font-weight: bold;
			color: white;
			border: 0 none;
			border-radius: 0px;
			cursor: pointer;
			padding: 10px 5px;
			margin: 10px 5px 10px 0px;
			float: right
		}
		.form, .previous-step {
			background: #616161;
		}
		.form, .next-step {
			background: #2F8D46;
		}
		#form .previous-step:hover,
		#form .previous-step:focus {
			background-color: #000000
		}
		#form .next-step:hover,
		#form .next-step:focus {
			background-color: #2F8D46
		}
		.text {
			color: #2F8D46;
			font-weight: normal
		}
		#progressbar {
			margin-bottom: 30px;
			overflow: hidden;
			color: lightgrey
		}
			#progressbar .active {
				color: #2F8D46
			}
			#progressbar li:before {
				width: 50px;
				height: 50px;
				line-height: 45px;
				display: block;
				font-size: 20px;
				color: #ffffff;
				background: lightgray;
				border-radius: 50%;
				margin: 0 auto 10px auto;
				padding: 2px
			}
			#progressbar li:after {
				content: '';
				width: 100%;
				height: 2px;
				background: lightgray;
				position: absolute;
				left: 0;
				top: 25px;
				z-index: -1
			}
			#progressbar li.active:before,
			#progressbar li.active:after {
				background: #2F8D46
			}
		.progress {
			height: 20px
		}
		.progress-bar {
			background-color: #2F8D46
		}
	</style>
</head>

<body>
	<div class="container">
		<div class="row justify-content-center">
			<div class="">
				<div class="px-0 pt-4 pb-0 mt-3 mb-3">
					<form id="form">
						<ul id="progressbar">
							@{
								int count = 1;
							}
							@foreach(var item in Model){
								@if (Model.First() == item)
								{
									<li class="active btn-step" id="step-@item.Id">
										<input class="btn-select" type="hidden" value="fieldset_@item.Id" name="@count">
										<strong>@item.DisplayName</strong>
									</li>
									++count;

								}else{
									<li id="step-@item.Id" class="btn-step">
										<input class="btn-select" type="hidden" value="fieldset_@item.Id" name="@count">
										<strong>@item.DisplayName</strong>
									</li>
									++@count;

								}
							}
							</ul>
						<div class="progress">
							<div class="progress-bar"></div>
						</div> <br>
						@foreach(var item in Model){
							
							<fieldset  id="fieldset_@item.Id">
							
							<h2>Welcome To GFG Step 1</h2>
							This Is @item.DisplayName
								@if (Model.First() == item)
								{
									<input type="button" name="next-step"
								   class="next-step" value="Next Step" />
								}else if(Model.Last()==item){
									<input type="button" name="previous-step"
								   class="previous-step"
								   value="Previous Step" />
								}else {
									<input type="button" name="next-step"
								   class="next-step" value="Next Step" />
									<input type="button" name="previous-step"
								   class="previous-step"
								   value="Previous Step" />
								}
							</fieldset>
						}
					</form>
				</div>
			</div>
		</div>
	</div>
</body>
<script>
	$(document).ready(function () {
		var currentGfgStep, nextGfgStep, previousGfgStep;
		var opacity;
		var current = 1;
		

		var modelData = JSON.parse('@Json.Serialize(Model)');
		var steps = modelData.length;
		var percentofWidth = parseFloat(100 / modelData.length)  ;
		percentofWidth = percentofWidth.toFixed();
		var str = "#progressbar li {list-style-type:none;font-size:15px;width:"+percentofWidth+"%;float:left;position: relative;font-weight:400}";
		var utrstyle = document.createElement("style")
		utrstyle.innerText = str;
		document.head.appendChild(utrstyle);
		debugger;
		for(var i=0; modelData.length>i;i++){
			if(i==0){
				var fieldId = "#fieldset_"+modelData[0].id;
				currentGfgStep = $(fieldId);
				currentGfgStep.show();
			}
			var stepId = "#step-" + modelData[i].id;
			var contentCount = i + 1;
			var styleOfStep = "#progressbar " + stepId + ":before{content:'" + contentCount + "'}";
			var styleSheet = document.createElement("style")
			styleSheet.innerText = styleOfStep;
			document.head.appendChild(styleSheet)
		}
		setProgressBar(current);
		function activeCurrentStep(stepNumber){
			for (var ind = 1; modelData.length>ind;ind++){
				var addInStep = stepNumber-1;
				if(ind<stepNumber){
					var idOfStep = "#step-"+modelData[ind].id;
					var stepMakeActive = $(idOfStep);
					stepMakeActive.addClass("active");
				} else if (ind > addInStep) {
					var idOfStep = "#step-"+modelData[ind].id;
					var stepMakeActive = $(idOfStep);
					stepMakeActive.removeClass("active");
					
				}
			}
		}
		$(".btn-step").click(function () {
			
			var btnOfStep = $(this).children(".btn-select");
			var currentFieldSetId = btnOfStep[0].value;
			debugger;
			console.log(currentFieldSetId);
			var stepCount = btnOfStep[0].name;
			var x = parseInt(stepCount, 10); // you want to use radix 10
			console.log(x);
			var idModifiewithHash = "#"+currentFieldSetId;
			debugger;
			nextGfgStep = $(idModifiewithHash);
			debugger;
			activeCurrentStep(x);
			currentGfgStep.hide();
			nextGfgStep.show();
			setProgressBar(x);
			current= x;
			currentGfgStep = nextGfgStep;
		});
		$(".next-step").click(function () {

			currentGfgStep = $(this).parent();
			nextGfgStep = $(this).parent().next();

			$("#progressbar li").eq($("fieldset")
				.index(nextGfgStep)).addClass("active");

			nextGfgStep.show();
			debugger;
			currentGfgStep.animate({ opacity: 0 }, {
				step: function (now) {
					opacity = 1 - now;

					currentGfgStep.css({
						'display': 'none',
						'position': 'relative'
					});
					nextGfgStep.css({ 'opacity': opacity });
				},
				duration: 500
			});
			setProgressBar(++current);
		});

		$(".previous-step").click(function () {

			currentGfgStep = $(this).parent();
			previousGfgStep = $(this).parent().prev();

			$("#progressbar li").eq($("fieldset")
				.index(currentGfgStep)).removeClass("active");

			previousGfgStep.show();

			currentGfgStep.animate({ opacity: 0 }, {
				step: function (now) {
					opacity = 1 - now;

					currentGfgStep.css({
						'display': 'none',
						'position': 'relative'
					});
					previousGfgStep.css({ 'opacity': opacity });
				},
				duration: 500
			});
			setProgressBar(--current);
		});

		function setProgressBar(currentStep) {
			var percent = parseFloat(100 / steps) * currentStep;
			percent = percent.toFixed();
			$(".progress-bar")
				.css("width", percent + "%")
		}

		$(".submit").click(function () {
			return false;
		})
	});
</script>

</html>


