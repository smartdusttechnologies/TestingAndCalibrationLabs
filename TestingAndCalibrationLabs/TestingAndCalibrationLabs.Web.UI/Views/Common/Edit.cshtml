@model TestingAndCalibrationLabs.Web.UI.Models.RecordDTO

@{
    ViewData["Title"] = "Edit";
}
<h1>Edit</h1>
<hr />
<div class="container-fluid">
    <div>
       <form id="commonForm" asp-controller="Common" asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id"  id="Id" name="Id"/>
               <input type="hidden" asp-for="UiPageId" id="UiPageId" name="UiPageId"/>
            <div class="row">
            @foreach (var item in Model.Fields)
            {
                var Controlvalue = Model.FieldValues.Where(x => x.UiPageMetadataId == item.Id).FirstOrDefault()?.Value;
                 <div class="col-lg-6 col-sm-12 col-xs-12 mt-3 form-element-for-common-control right-pd-frm-input">
                  <input class="form-input width-full" type="@item.UiControlTypeName" id="@item.Id"  placeholder=" " name="@item.UiControlDisplayName" onchange="this.setAttribute('value',this.value)" value="@Controlvalue">
                  <label class="form-label" for="@item.UiControlDisplayName">@item.UiControlDisplayName</label>
               </div>

              @*  <div class="form-group-for-common">
                    <label asp-for="@item.UiControlDisplayName">@item.UiControlDisplayName</label>
                    <input type="@item.UiControlType" id="@item.Id" title="@item.UiControlDisplayName" value="@Controlvalue" />
                    <span asp-validation-for="@item.UiControlDisplayName" class="text-danger"></span>
                </div>*@
            }
            </div>
            <div class="form-group-for-common">
                <input type="button" value="Save" class="btn btn-primary mt-3" onclick="AjaxFormSubmit()" />
            </div>

        </form>
            <input type="hidden" value="" name="lefid" id="lefid"/>
    </div>
</div>

<div>
    <a asp-action="Index" asp-route-id="@Model.UiPageId">Back to List</a>
</div>
 <div>
        <div class="d-flex justify-content-center fixed-bottom">
            <div class="alert alert-success" role="alert" id="snackbarsuccess">
               
             <div class="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation6 MuiAlert-root MuiAlert-filledSuccess MuiAlert-filled css-1lgz3mj" role="alert"><div class="MuiAlert-icon css-1l54tgj"><svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-1cw4hi4" focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="SuccessOutlinedIcon"><path d="M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"></path></svg></div><div class="MuiAlert-message css-1xsto0d">This is a success message!</div></div>
            </div>
       </div>
    </div>

    <div>
        <div class="d-flex justify-content-center fixed-bottom">
            <div role="alert" id="snackbarerror">
              <div class="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation6 MuiAlert-root MuiAlert-filledError MuiAlert-filled css-1ufabz4" role="alert">
                  <div class="MuiAlert-icon css-1l54tgj"><svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-1cw4hi4" focusable="false"  viewBox="0 0 24 24">
                      <path d="M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"></path></svg></div>
              <div class="MuiAlert-message css-1xsto0d" id="errormessage">!</div></div>
         
            </div>
        </div>
     </div>
 <script>
      function myFunction() {
            var x = document.getElementById("snackbarsuccess");
          x.className = "show";
          setTimeout(function(){ x.className = x.className.replace("show", ""); }, 3000);
      }
        function myFunctionError() {
          var x = document.getElementById("snackbarerror");
          x.className = "show";
          setTimeout(function(){ x.className = x.className.replace("show", ""); }, 3000);
       }
   </script>
<script type="text/javascript">
    function AjaxFormSubmit() {
           var x = document.getElementById("lefid").value;
         if( document.getElementById(x) !=null && document.getElementById(x) !=undefined){
          document.getElementById(x).style.border = "1px solid black ";
         }
        //Set the URL.
        var url = $("#commonForm").attr("action");
        var uiPageMetaData = JSON.parse('@Json.Serialize(Model.Fields)');
        //var uiPageMetaData = modelData.uiPageMetadata;
        var fieldValues = [];

        for (let i = 0; i < uiPageMetaData.length; i++) {
            var fieldId = uiPageMetaData[i].id;
            var fieldValue = $('#' + fieldId).val();
            var keyValuepair = {};
            keyValuepair.UiPageMetadataId = fieldId;
            keyValuepair.Value = fieldValue;
            fieldValues.push(keyValuepair)
        }
        var uiPageId = parseInt($("#UiPageId").val())
        var id = parseInt($("#Id").val())
       
        $.ajax({
            type: 'POST',
            url: url,
            data: { "Id" : id, "UiPageId" : uiPageId, "FieldValues" : fieldValues},
            success: function (response) {
            
                  window.location.href = "/";                
                },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
             var newresponseJSON = response.responseJSON;                    //assiging the values of responseJson to  newresponseJSON
                var newErrorMessage=newresponseJSON.errorMessage;               //assiging the values of errorMessage to  newErrorMessage
                //console.log(response.fieldId);
                
                 myFunctionError();                                              //Calling myFunctionError javacript function
                document.getElementById("errormessage").innerHTML = newErrorMessage.reason;
                ErrorMessage(NotificationNumbers++, newErrorMessage.reason);  //To pass the NotificatonContent to BellIcon
                //    var s = newErrorMessage.fid//Sending the reason to html

                document.getElementById(newErrorMessage.fid).style.border = "2px solid red";
                  document.getElementById("lefid").value = newErrorMessage.sourceId;
            }
        });
    }
</script>
